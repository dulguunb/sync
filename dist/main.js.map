{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/musiclist.service.ts","webpack:///./src/app/musiclist/musiclist.component.css","webpack:///./src/app/musiclist/musiclist.component.html","webpack:///./src/app/musiclist/musiclist.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACM;AACsB;AACb;AACO;AACc;AACN;AACd;AAkBzD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAjBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,iFAAkB;aACnB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,8EAAkB;gBAClB,gEAAc;gBACd,oEAAkB;gBAClB,4FAAuB;gBACvB,wEAAe;aAChB;YACD,SAAS,EAAE,EAAE;YACb,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BqB;AAEmB;AAK9D;IAGE,0BAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,cAAS,GAAG,iBAAiB,CAAC;QAC9B,cAAS,GAAG,gBAAgB,CAAC;IACY,CAAC;IAC1C,kCAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,IAAI,CAAC,SAAS,CAAC,CAAC;IAChD,CAAC;IACD,+BAAI,GAAJ,UAAK,KAAY;QACf,IAAM,WAAW,GAAG;YAClB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACvB,cAAc,EAAG,kBAAkB;gBACnC,eAAe,EAAE,eAAe;aACjC,CAAC;SAAC,CAAC;QACJ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAQ,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,WAAW,CAAC,CAAC;IACnE,CAAC;IAfU,gBAAgB;QAH5B,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;yCAI0B,+DAAU;OAHzB,gBAAgB,CAgB5B;IAAD,uBAAC;CAAA;AAhB4B;;;;;;;;;;;;ACP7B,mB;;;;;;;;;;;ACAA,kMAAkM,OAAO,oO;;;;;;;;;;;;;;;;;;;;;;;;;ACAvJ;AACQ;AAU1D;IAGE,4BAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAC3D,qCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IACD,qCAAQ,GAAR;QAAA,iBAIC;QAHC,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,SAAS,CAAC,UAAC,SAAS;YAClD,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IACD,iCAAI,GAAJ,UAAK,KAAa;QAChB,IAAM,MAAM,GAAU;YACpB,SAAS,EAAE,KAAK;SACjB,CAAC;QACF,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,UAAC,OAAO;YACtD,yBAAyB;QACxB,CAAC,CAAC,CAAC;IACL,CAAC;IAnBU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAIsC,mEAAgB;OAH3C,kBAAkB,CAoB9B;IAAD,yBAAC;CAAA;AApB8B;;;;;;;;;;;;;;ACX/B;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-musiclist></app-musiclist>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { MusiclistComponent } from './musiclist/musiclist.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport { MatFormFieldModule, MatInputModule } from '@angular/material';\nimport {MatButtonModule} from '@angular/material/button';\n@NgModule({\n  declarations: [\n    AppComponent,\n    MusiclistComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    MatExpansionModule,\n    MatInputModule,\n    MatFormFieldModule,\n    BrowserAnimationsModule,\n    MatButtonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Music } from './music';\n@Injectable({\n  providedIn: 'root'\n})\nexport class MusiclistService {\n  musiclist = '/api/musicLists';\n  playmusic = '/api/playmusic';\n  constructor(private http: HttpClient) {  }\n  getList(): Observable<Music[]> {\n    return this.http.get<Music[]>(this.musiclist);\n  }\n  send(music: Music): Observable<Music> {\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type':  'application/json',\n        'Authorization': 'my-auth-token'\n      })};\n      console.log(music);\n    return this.http.post<Music>(this.playmusic, music, httpOptions);\n  }\n}\n","module.exports = \"\"","module.exports = \"<mat-accordion *ngFor=\\\"let music of musicList\\\">\\n        <mat-expansion-panel>\\n      \\n          <mat-expansion-panel-header>\\n            <mat-panel-title>\\n             {{music}}\\n            </mat-panel-title>\\n          </mat-expansion-panel-header>\\n      \\n        \\n              <button (click)=\\\"play(music)\\\" mat-button>Play me!</button>\\n        </mat-expansion-panel>  \\n</mat-accordion>      \\n\"","import { Component, OnInit } from '@angular/core';\nimport { MusiclistService } from './../musiclist.service';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport { Music } from '../music';\n@Component({\n  selector: 'app-musiclist',\n  templateUrl: './musiclist.component.html',\n  styleUrls: ['./musiclist.component.css']\n})\nexport class MusiclistComponent implements OnInit {\n\n  musicList: Music[];\n  constructor(private musicListService: MusiclistService) { }\n  ngOnInit() {\n    this.getMusic();\n  }\n  getMusic(): void {\n    this.musicListService.getList().subscribe((musicList) => {\n      this.musicList = musicList;\n    });\n  }\n  play(music: string) {\n    const music_: Music = {\n      musicname: music\n    };\n    this.musicListService.send(music_).subscribe((music__) => {\n   //   console.log(music_);\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}